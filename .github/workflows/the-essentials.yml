# This file contains the essential steps for getting the app packaged and scanned using Veracode's various
# scan types.  We suggest starting with the elements in this file and fully understanding them before
# attempting more advanced use cases, like 'Pipeline scan on a PR', or importing Issues.

# The essential steps shown below are:
#   checkout and package the app for scanning
#   upload for a static scan
#   run the SCA agent scan
#   run the Container scan

name: the-essentials
on:
  push:
    branches: [main]

jobs:
  checkout-and-package:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup node
        uses: actions/setup-node@v4
        with: 
          node-version: '20.14.0'

      - name: Zip app files
        run: | 
          rm -rf verademo-go.zip
          zip -r verademo-go.zip .

      - name: save artifact
        uses: actions/upload-artifact@v3
        with: 
           name: scan-target
           path: verademo-go.zip
        
  veracode-sast-pipeline-scan:
    runs-on: ubuntu-latest
    needs: [ checkout-and-package ]
    name: veracode sast pipeline scan

    steps:
      - name: get artifact
        uses: actions/download-artifact@v3
        with:
          name: scan-target

      # debugging steps can be handy...
      - name: debug1
        run: |
          pwd
          ls -l

      - name: pipeline-scan action step
        id: pipeline-scan
        uses: veracode/Veracode-pipeline-scan-action@v1.0.16
        with:
          vid: ${{ secrets.VERACODE_ID }}
          vkey: ${{ secrets.VERACODE_KEY }}
          file: "verademo-go.zip"
  
  Veracode-SAST-Pipeline-Scan2:
    runs-on: ubuntu-latest
    needs: [checkout-and-package]
    container:
      image: veracode/pipeline-scan:latest
      options: --user root
    
    steps:
      - name: get artifact
        uses: actions/download-artifact@v3
        with:
          name: scan-target

      # debugging steps can be handy...
      - name: debug1
        run: |
          pwd
          ls -l
          
      - name: scan 
        run: |
          java -jar /opt/veracode/pipeline-scan.jar -vid "${{ secrets.VERACODE_ID }}" -vkey "${{ secrets.VERACODE_KEY }}" -f "verademo-go.zip"
    continue-on-error: true

    
